{"version":3,"file":"isObjectIdValid.js","sourceRoot":"/","sources":["api/middlewares/isObjectIdValid.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,qCAAiC;AACjC,kEAA4C;AAC5C,6DAA4D;AAE5D,oBAAoB;AACP,QAAA,eAAe,GAAG,IAAA,qCAAiB,EAAC,UAAO,GAAY,EAAE,GAAa,EAAE,IAAkB;;;QAC/F,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,gBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC;YAAE,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC;QACrG,IAAI,EAAE,CAAC;;;KACR,CAAC,CAAC","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport { Types } from 'mongoose';\nimport CustomError from '../../CustomError';\nimport { asyncErrorWrapper } from '../../asyncErrorWrapper';\n\n// 글 id가 존재하는지 확인한다.\nexport const isObjectIdValid = asyncErrorWrapper(async (req: Request, res: Response, next: NextFunction) => {\n  const objectId = req.params.id;\n  if (!Types.ObjectId.isValid(objectId)) throw new CustomError('NotFoundError', 404, 'Post not found');\n  next();\n});\n"]}