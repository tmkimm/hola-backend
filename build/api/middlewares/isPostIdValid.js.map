{"version":3,"file":"isPostIdValid.js","sourceRoot":"/","sources":["api/middlewares/isPostIdValid.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AAEjC,0CAAyC;AACzC,6DAA4D;AAC5D,kEAA4C;AAE5C,oBAAoB;AACP,QAAA,aAAa,GAAG,IAAA,qCAAiB,EAAC,UAAO,GAAY,EAAE,GAAa,EAAE,IAAkB;;;;;gBAC7F,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,IAAI,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC;gBACzF,IAAI,CAAC,MAAM,IAAI,CAAC,gBAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC;oBAAE,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC;gBACjG,qBAAM,WAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAA;;gBAAlC,IAAI,GAAG,SAA2B;gBACxC,IAAI,CAAC,IAAI;oBAAE,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC;gBAEzE,IAAI,EAAE,CAAC;;;;KACR,CAAC,CAAC","sourcesContent":["import { Types } from 'mongoose';\r\nimport { Request, Response, NextFunction } from 'express';\r\nimport { Post } from '../../models/Post';\r\nimport { asyncErrorWrapper } from '../../asyncErrorWrapper';\r\nimport CustomError from '../../CustomError';\r\n\r\n// 글 id가 존재하는지 확인한다.\r\nexport const isPostIdValid = asyncErrorWrapper(async (req: Request, res: Response, next: NextFunction) => {\r\n  const postId = req.params.id || req.params.postId || req.body.postId || req.query.postId;\r\n  if (!postId || !Types.ObjectId.isValid(postId)) throw new CustomError('NotFoundError', 404, 'Post not found');\r\n  const post = await Post.findById(postId);\r\n  if (!post) throw new CustomError('NotFoundError', 404, 'Post not found');\r\n\r\n  next();\r\n});\r\n"]}