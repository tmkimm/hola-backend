{"version":3,"file":"checkADIsActive.js","sourceRoot":"/","sources":["api/middlewares/checkADIsActive.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,sDAAgC;AAChC,kEAA4C;AAC5C,6DAA4D;AAC5D,4DAAmF;AAEnF,0CAA0C;AAC1C,IAAM,eAAe,GAAG,IAAA,qCAAiB,EAAC,UAAO,GAAY,EAAE,GAAa,EAAE,IAAkB;;;;;gBACxF,OAAO,GAAG,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC;gBACtB,QAAQ,GAAK,kBAAQ,CAAC,KAAK,SAAnB,CAAoB;gBAEpC,IAAI,CAAC,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC;oBAAE,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,qBAAqB,CAAC,CAAC;gBAC1E,qBAAM,6BAAa,CAAC,0BAA0B,CAAC,OAAO,CAAC,EAAA;;gBAAtF,EAAE,GAA6B,SAAuD;gBAC5F,IAAI,EAAE,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,mBAAmB,IAAI,QAAQ,EAAE;oBAC5E,MAAM,IAAI,qBAAW,CAAC,mBAAmB,EAAE,GAAG,EAAE,sBAAsB,CAAC,CAAC;iBACzE;gBACD,IAAI,EAAE,CAAC;;;;KACR,CAAC,CAAC;AAEM,0CAAe","sourcesContent":["import { NextFunction, Request, Response } from 'express';\nimport mongoose from 'mongoose';\nimport CustomError from '../../CustomError';\nimport { asyncErrorWrapper } from '../../asyncErrorWrapper';\nimport { Advertisement, IAdvertisementDocument } from '../../models/Advertisement';\n\n// 공모전 삭제 시 해당 공모전으로 광고가 진행중일 경우 삭제할 수 없다.\nconst checkADIsActive = asyncErrorWrapper(async (req: Request, res: Response, next: NextFunction) => {\n  const eventId = req.params.id;\n  const { ObjectId } = mongoose.Types;\n\n  if (!eventId || !ObjectId.isValid(eventId)) throw new CustomError('NotFoundError', 404, 'Event Id is Invalid');\n  const ad: IAdvertisementDocument[] = await Advertisement.findAdvertisementByEventId(eventId);\n  if (ad && ad.length > 0 && ad[ad.length - 1].advertisementStatus == 'active') {\n    throw new CustomError('UnAuthorizedError', 400, 'An active ad exists.');\n  }\n  next();\n});\n\nexport { checkADIsActive };\n"]}