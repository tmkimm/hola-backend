{"version":3,"file":"feedback.js","sourceRoot":"/","sources":["api/routes/feedback.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,mCAAkE;AAClE,oDAA2D;AAG3D,IAAM,KAAK,GAAG,IAAA,gBAAM,GAAE,CAAC;AAEvB,mBAAe,UAAC,GAAW;IACzB;;;QAGI;IACJ,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IAE5B,SAAS;IACT,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,UAAgB,GAAY,EAAE,GAAa,EAAE,IAAkB;;;;;;wBACvE,KAAsB,GAAG,CAAC,IAAI,EAA5B,MAAM,YAAA,EAAE,OAAO,aAAA,CAAc;wBAEpB,qBAAM,IAAA,2BAAgB,EAAC,MAAM,EAAE,OAAO,CAAC,EAAA;;wBAAlD,QAAQ,GAAG,SAAuC;wBACxD,sBAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAC;;;;KACvC,CAAC,CAAC;AACL,CAAC,EAAC","sourcesContent":["import { Router, Request, Response, NextFunction } from 'express';\nimport { registerFeedback } from '../../services/feedback';\nimport { Feedback as FeedbackModel } from '../../models/Feedback';\n\nconst route = Router();\n\nexport default (app: Router) => {\n  /*\n    글에 관련된 Router를 정의한다.\n    등록 / 수정 / 삭제하려는 사용자의 정보는 Access Token을 이용하여 처리한다.\n    */\n  app.use('/feedback', route);\n\n  // 피드백 등록\n  route.post('/', async function (req: Request, res: Response, next: NextFunction) {\n    const { rating, content } = req.body;\n\n    const feedback = await registerFeedback(rating, content);\n    return res.status(201).json(feedback);\n  });\n};\n"]}