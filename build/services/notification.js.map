{"version":3,"file":"notification.js","sourceRoot":"/","sources":["services/notification.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;IACE,6BAAsB,iBAAqC;QAArC,sBAAiB,GAAjB,iBAAiB,CAAoB;IAAG,CAAC;IAE/D,cAAc;IACR,0CAAY,GAAlB,UAAmB,MAAsB;;;;;4BACxB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAA;;wBAAjE,MAAM,GAAG,SAAwD;wBACvE,sBAAO,MAAM,EAAC;;;;KACf;IAED,oBAAoB;IACd,6CAAe,GAArB,UAAsB,MAAsB;;;;;4BAC3B,qBAAM,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAA;;wBAA7D,MAAM,GAAG,SAAoD;wBACnE,sBAAO,MAAM,EAAC;;;;KACf;IACH,0BAAC;AAAD,CAAC,AAdD,IAcC;AAdY,kDAAmB","sourcesContent":["import { Types } from 'mongoose';\nimport { INotificationModel } from '../models/Notification';\n\nexport class NotificationService {\n  constructor(protected notificationModel: INotificationModel) {}\n\n  // 내 알림을 조회한다.\n  async findMyNotice(author: Types.ObjectId) {\n    const notice = await this.notificationModel.findMyNotifications(author);\n    return notice;\n  }\n\n  // 읽지 않은 알림 수를 조회한다.\n  async findUnReadCount(author: Types.ObjectId) {\n    const notice = await this.notificationModel.findUnReadCount(author);\n    return notice;\n  }\n}\n"]}