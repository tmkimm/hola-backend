{"version":3,"file":"notification.js","sourceRoot":"/","sources":["services/notification.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uDAA2E;AAE3E,gBAAgB;AAChB,IAAM,iBAAiB,GAAG,UAAO,MAAsB;;;;oBACtC,qBAAM,2BAAiB,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAA;;gBAA1D,MAAM,GAAG,SAAiD;gBAChE,sBAAO,MAAM,EAAC;;;KACf,CAAC;AAuBO,8CAAiB;AArB1B,YAAY;AACZ,IAAM,gBAAgB,GAAG,UAAO,GAAmB;;;;oBAClC,qBAAM,2BAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAA;;gBAAtD,MAAM,GAAG,SAA6C;gBAC5D,sBAAO,MAAM,EAAC;;;KACf,CAAC;AAiB0B,4CAAgB;AAf5C,oBAAoB;AACpB,IAAM,eAAe,GAAG,UAAO,MAAsB;;;;oBACpC,qBAAM,2BAAiB,CAAC,eAAe,CAAC,MAAM,CAAC,EAAA;;gBAAxD,MAAM,GAAG,SAA+C;gBAC9D,sBAAO,MAAM,EAAC;;;KACf,CAAC;AAW4C,0CAAe;AAT7D,WAAW;AACX,IAAM,gBAAgB,GAAG,UAAO,GAAmB;;;oBACjD,qBAAM,2BAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAA;;gBAA7C,SAA6C,CAAC;;;;KAC/C,CAAC;AAM6D,4CAAgB;AAJ/E,cAAc;AACd,IAAM,OAAO,GAAG,UAAO,YAA4B;;;oBACjD,qBAAM,2BAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,EAAA;;gBAA7C,SAA6C,CAAC;;;;KAC/C,CAAC;AAC+E,0BAAO","sourcesContent":["import { Types } from 'mongoose';\nimport { Notification as NotificationModel } from '../models/Notification';\n\n// 알림 리스트를 조회한다.\nconst findNotifications = async (userId: Types.ObjectId) => {\n  const notice = await NotificationModel.findNotifications(userId);\n  return notice;\n};\n\n// 알림을 조회한다.\nconst findNotification = async (_id: Types.ObjectId) => {\n  const notice = await NotificationModel.findNotification(_id);\n  return notice;\n};\n\n// 읽지 않은 알림 수를 조회한다.\nconst findUnReadCount = async (author: Types.ObjectId) => {\n  const notice = await NotificationModel.findUnReadCount(author);\n  return notice;\n};\n\n// 알림 읽음 처리\nconst readNotification = async (_id: Types.ObjectId) => {\n  await NotificationModel.readNotification(_id);\n};\n\n// 알림 전체 읽음 처리\nconst readAll = async (targetUserId: Types.ObjectId) => {\n  await NotificationModel.readAll(targetUserId);\n};\nexport { findNotifications, findNotification, findUnReadCount, readNotification, readAll };\n"]}