{"version":3,"file":"advertisement.js","sourceRoot":"/","sources":["services/advertisement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,+DAAyC;AAEzC,oDAA0B;AAC1B,qDAA+B;AAE/B;IACE,8BAAsB,kBAAuC;QAAvC,uBAAkB,GAAlB,kBAAkB,CAAqB;IAAG,CAAC;IAEjE,gBAAgB;IACV,+CAAgB,GAAtB;;;;;4BACwB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAA;;wBAAxE,aAAa,GAAG,SAAwD;wBAC9E,sBAAO,aAAa,EAAC;;;;KACtB;IAED,iBAAiB;IACX,oDAAqB,GAA3B;;;;;4BACwB,qBAAM,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,aAAa,CAAC,EAAA;;wBAA7E,aAAa,GAAG,SAA6D;wBACnF,sBAAO,aAAa,EAAC;;;;KACtB;IACD,WAAW;IACL,gDAAiB,GAAvB,UAAwB,eAA+B;;;;;4BAC1B,qBAAM,IAAI,CAAC,kBAAkB,CAAC,iBAAiB,CAAC,eAAe,CAAC,EAAA;;wBAArF,aAAa,GAAQ,SAAgE;wBAC3F,IAAI,CAAC,aAAa;4BAAE,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,yBAAyB,CAAC,CAAC;wBAC3F,IACE,aAAa,CAAC,iBAAiB,KAAK,OAAO;4BAC3C,aAAa,CAAC,OAAO;4BACrB,aAAa,CAAC,OAAO,CAAC,GAAG;4BACzB,aAAa,CAAC,OAAO,CAAC,KAAK;4BAE3B,4CAAY,aAAa,KAAE,OAAO,EAAE,aAAa,CAAC,OAAO,CAAC,GAAG,EAAE,UAAU,EAAE,aAAa,CAAC,OAAO,CAAC,KAAK,KAAG;;4BACtG,sBAAO,aAAa,EAAC;;;;;KAC3B;IAED,QAAQ;IACF,kDAAmB,GAAzB,UAA0B,aAAqC;;;;;4BACjC,qBAAM,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,aAAa,CAAC,EAAA;;wBAAzE,mBAAmB,GAAG,SAAmD;wBAC/E,sBAAO,mBAAmB,EAAC;;;;KAC5B;IAED,QAAQ;IACF,kDAAmB,GAAzB,UAA0B,EAAkB,EAAE,aAAqC;;;;;4BACrD,qBAAM,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,EAAE,EAAE,aAAa,CAAC,EAAA;;wBAA1F,mBAAmB,GAAG,SAAoE;wBAChG,sBAAO,mBAAmB,EAAC;;;;KAC5B;IAED,QAAQ;IACF,kDAAmB,GAAzB,UAA0B,EAAkB;;;;4BAC1C,qBAAM,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,EAAE,CAAC,EAAA;;wBAArD,SAAqD,CAAC;;;;;KACvD;IAED,WAAW;IACL,uDAAwB,GAA9B;;;;4BACE,qBAAM,IAAI,CAAC,kBAAkB,CAAC,wBAAwB,EAAE,EAAA;;wBAAxD,SAAwD,CAAC;;;;;KAC1D;IAED,yBAAyB;IACnB,4CAAa,GAAnB,UAAoB,QAAgB;;;;;;wBAClC,IAAI,CAAC,QAAQ,EAAE;4BACb,MAAM,IAAI,qBAAW,CAAC,eAAe,EAAE,GAAG,EAAE,2BAA2B,CAAC,CAAC;yBAC1E;wBAEK,EAAE,GAAG,IAAI,iBAAG,CAAC,EAAE,CAAC;4BACpB,WAAW,EAAE,gBAAM,CAAC,aAAa;4BACjC,eAAe,EAAE,gBAAM,CAAC,iBAAiB;4BACzC,MAAM,EAAE,gBAAM,CAAC,cAAc;yBAC9B,CAAC,CAAC;wBAEG,MAAM,GAAG;4BACb,MAAM,EAAE,gBAAM,CAAC,YAAY;4BAC3B,GAAG,EAAE,aAAM,QAAQ,CAAE;4BACrB,OAAO,EAAE,EAAE,GAAG,EAAE,EAAE,UAAU;yBAC7B,CAAC;wBAEmB,qBAAM,EAAE,CAAC,mBAAmB,CAAC,WAAW,EAAE,MAAM,CAAC,EAAA;;wBAAhE,YAAY,GAAG,SAAiD;wBACtE,sBAAO,YAAY,EAAC;;;;KACrB;IACH,2BAAC;AAAD,CAAC,AAvED,IAuEC;AAvEY,oDAAoB","sourcesContent":["import { Types } from 'mongoose';\nimport CustomError from '../CustomError';\nimport { IAdvertisementDocument, IAdvertisementModel } from '../models/Advertisement';\nimport AWS from 'aws-sdk';\nimport config from '../config';\n\nexport class AdvertisementService {\n  constructor(protected advertisementModel: IAdvertisementModel) {}\n\n  // 진행중인 배너 광고 조회\n  async findActiveBanner() {\n    const advertisement = await this.advertisementModel.findActiveBanner('banner');\n    return advertisement;\n  }\n\n  // 진행중인 공모전 광고 조회\n  async findActiveEventBanner() {\n    const advertisement = await this.advertisementModel.findActiveBanner('eventBanner');\n    return advertisement;\n  }\n  // 광고 상세 조회\n  async findAdvertisement(advertisementId: Types.ObjectId) {\n    const advertisement: any = await this.advertisementModel.findAdvertisement(advertisementId);\n    if (!advertisement) throw new CustomError('NotFoundError', 404, 'Advertisement not found');\n    if (\n      advertisement.advertisementType === `event` &&\n      advertisement.eventId &&\n      advertisement.eventId._id &&\n      advertisement.eventId.title\n    )\n      return { ...advertisement, eventId: advertisement.eventId._id, eventTitle: advertisement.eventId.title };\n    else return advertisement;\n  }\n\n  // 광고 등록\n  async createAdvertisement(advertisement: IAdvertisementDocument) {\n    const advertisementRecord = await this.advertisementModel.create(advertisement);\n    return advertisementRecord;\n  }\n\n  // 광고 수정\n  async modifyAdvertisement(id: Types.ObjectId, advertisement: IAdvertisementDocument) {\n    const advertisementRecord = await this.advertisementModel.modifyAdvertisement(id, advertisement);\n    return advertisementRecord;\n  }\n\n  // 광고 삭제\n  async deleteAdvertisement(id: Types.ObjectId) {\n    await this.advertisementModel.deleteAdvertisement(id);\n  }\n\n  // 광고 자동 마감\n  async updateClosedAfterEndDate() {\n    await this.advertisementModel.updateClosedAfterEndDate();\n  }\n\n  // S3 Pre-Sign Url을 발급한다.\n  async getPreSignUrl(fileName: string) {\n    if (!fileName) {\n      throw new CustomError('NotFoundError', 404, '\"fileName\" does not exist');\n    }\n\n    const s3 = new AWS.S3({\n      accessKeyId: config.S3AccessKeyId,\n      secretAccessKey: config.S3SecretAccessKey,\n      region: config.S3BucketRegion,\n    });\n\n    const params = {\n      Bucket: config.S3BucketName,\n      Key: `ad/${fileName}`,\n      Expires: 60 * 10, // seconds\n    };\n\n    const signedUrlPut = await s3.getSignedUrlPromise('putObject', params);\n    return signedUrlPut;\n  }\n}\n"]}