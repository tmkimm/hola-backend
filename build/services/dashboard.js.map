{"version":3,"file":"dashboard.js","sourceRoot":"/","sources":["services/dashboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { User } from '../models/User';\nimport { Post } from '../models/Post';\n\nimport { SignOutUser } from '../models/SignOutUser';\nimport { PostFilterLog } from '../models/PostFilterLog';\n\nexport class DashboardService {\n  // 데일리 액션) 현재 총 회원 수, 오늘 가입자, 오늘 탈퇴자\n  async findDailyUser() {\n    const totalUser: number = await User.countDocuments();\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    const signUp: number = await User.countDocuments({ createdAt: { $gte: today } });\n    const signOut: number = await SignOutUser.countDocuments({ signOutDate: { $gte: today } });\n\n    return {\n      totalUser,\n      signUp,\n      signOut,\n    };\n  }\n\n  // 일자별 회원 가입 현황(일자 / 신규 가입자 / 탈퇴자)\n  async findUserHistory(startDate: string, endDate: string) {\n    const userHistory = await User.aggregate([\n      { $match: { createdAt: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } }, signIn: { $sum: 1 } } },\n      { $addFields: { signOut: 0 } },\n      {\n        $unionWith: {\n          coll: 'signoutusers',\n          pipeline: [\n            { $match: { signOutDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n            { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$signOutDate' } }, signOut: { $sum: 1 } } },\n            { $addFields: { signIn: 0 } },\n          ],\n        },\n      },\n      { $group: { _id: '$_id', signIn: { $sum: '$signIn' }, signOut: { $sum: '$signOut' } } },\n      { $sort: { _id: 1 } },\n    ]);\n    return userHistory;\n  }\n\n  // 게시글 데일리(오늘 전체 글 조회 수, 등록된 글, 글 마감 수, 글 삭제 수 )\n  async findDailyPost() {\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    let totalView = 0;\n    const totalViewSum = await Post.aggregate([\n      { $match: { createdAt: { $gte: today } } },\n      { $group: { _id: null, totalView: { $sum: '$views' } } },\n    ]);\n    if (totalViewSum && totalViewSum.length > 0 && totalViewSum[0].totalView) totalView = totalViewSum[0].totalView;\n\n    const created: number = await Post.countDocuments({ createdAt: { $gte: today } });\n    const closed: number = await Post.countDocuments({ closeDate: { $gte: today } });\n    const deleted: number = await Post.countDocuments({ deleteDate: { $gte: today } });\n    return {\n      totalView,\n      created,\n      closed,\n      deleted,\n    };\n  }\n\n  // 일자별 게시글 현황(일자 / 등록된 글 / 마감된 글 / 삭제된 글)\n  async findPostHistory(startDate: string, endDate: string) {\n    const postHistory = await Post.aggregate([\n      { $match: { createdAt: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } }, created: { $sum: 1 } } },\n      {\n        $unionWith: {\n          coll: 'posts',\n          pipeline: [\n            { $match: { closeDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n            { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$closeDate' } }, closed: { $sum: 1 } } },\n          ],\n        },\n      },\n      {\n        $unionWith: {\n          coll: 'posts',\n          pipeline: [\n            { $match: { deleteDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n            { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$deleteDate' } }, deleted: { $sum: 1 } } },\n          ],\n        },\n      },\n      {\n        $group: {\n          _id: '$_id',\n          created: { $sum: '$created' },\n          closed: { $sum: '$closed' },\n          deleted: { $sum: '$deleted' },\n        },\n      },\n      { $sort: { _id: 1 } },\n    ]);\n    return postHistory;\n  }\n\n  // 가장 많이 조회해 본 언어 필터\n  async findPostFilterRank(startDate: string, endDate: string) {\n    const userHistory = await PostFilterLog.aggregate([\n      { $match: { viewDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n      { $project: { _id: 0, viewDate: 1, language: 1 } },\n      { $unwind: '$language' },\n      { $group: { _id: '$language', count: { $sum: 1 } } },\n      { $sort: { count: -1 } },\n    ]);\n    return userHistory;\n  }\n}\n"]}