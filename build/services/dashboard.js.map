{"version":3,"file":"dashboard.js","sourceRoot":"/","sources":["services/dashboard.ts"],"names":[],"mappings":"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","sourcesContent":["import { User as UserModel } from '../models/User';\nimport { Post as PostModel } from '../models/Post';\n\nimport { SignOutUser as SignOutUserModel } from '../models/SignOutUser';\nimport { PostFilterLog as PostFilterLogModel } from '../models/PostFilterLog';\n\n// 데일리 액션) 현재 총 회원 수, 오늘 가입자, 오늘 탈퇴자\nconst findDailyUser = async () => {\n  const totalUser: number = await UserModel.countDocuments();\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  const signUp: number = await UserModel.countDocuments({ createdAt: { $gte: today } });\n  const signOut: number = await SignOutUserModel.countDocuments({ signOutDate: { $gte: today } });\n\n  return {\n    totalUser,\n    signUp,\n    signOut,\n  };\n};\n\n// 일자별 회원 가입 현황(일자 / 신규 가입자 / 탈퇴자)\nconst findUserHistory = async (startDate: string, endDate: string) => {\n  const userHistory = await UserModel.aggregate([\n    { $match: { createdAt: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n    { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } }, signIn: { $sum: 1 } } },\n    { $addFields: { signOut: 0 } },\n    {\n      $unionWith: {\n        coll: 'signoutusers',\n        pipeline: [\n          { $match: { signOutDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n          { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$signOutDate' } }, signOut: { $sum: 1 } } },\n          { $addFields: { signIn: 0 } },\n        ],\n      },\n    },\n    { $group: { _id: '$_id', signIn: { $sum: '$signIn' }, signOut: { $sum: '$signOut' } } },\n    { $sort: { _id: 1 } },\n  ]);\n  return userHistory;\n};\n// 게시글 데일리(오늘 전체 글 조회 수, 등록된 글, 글 마감 수, 글 삭제 수 )\nconst findDailyPost = async () => {\n  const today = new Date();\n  today.setHours(0, 0, 0, 0);\n  let totalView = 0;\n  const totalViewSum = await PostModel.aggregate([\n    { $match: { createdAt: { $gte: today } } },\n    { $group: { _id: null, totalView: { $sum: '$views' } } },\n  ]);\n  if (totalViewSum && totalViewSum.length > 0 && totalViewSum[0].totalView) totalView = totalViewSum[0].totalView;\n\n  const created: number = await PostModel.countDocuments({ createdAt: { $gte: today } });\n  const closed: number = await PostModel.countDocuments({ closeDate: { $gte: today } });\n  const deleted: number = await PostModel.countDocuments({ deleteDate: { $gte: today } });\n  return {\n    totalView,\n    created,\n    closed,\n    deleted,\n  };\n};\n\n// 일자별 게시글 현황(일자 / 등록된 글 / 마감된 글 / 삭제된 글)\nconst findPostHistory = async (startDate: string, endDate: string) => {\n  const postHistory = await PostModel.aggregate([\n    { $match: { createdAt: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n    { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } }, created: { $sum: 1 } } },\n    {\n      $unionWith: {\n        coll: 'posts',\n        pipeline: [\n          { $match: { closeDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n          { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$closeDate' } }, closed: { $sum: 1 } } },\n        ],\n      },\n    },\n    {\n      $unionWith: {\n        coll: 'posts',\n        pipeline: [\n          { $match: { deleteDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n          { $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$deleteDate' } }, deleted: { $sum: 1 } } },\n        ],\n      },\n    },\n    {\n      $group: {\n        _id: '$_id',\n        created: { $sum: '$created' },\n        closed: { $sum: '$closed' },\n        deleted: { $sum: '$deleted' },\n      },\n    },\n    { $sort: { _id: 1 } },\n  ]);\n  return postHistory;\n};\n\n// 가장 많이 조회해 본 언어 필터\nconst findPostFilterRank = async (startDate: string, endDate: string) => {\n  const userHistory = await PostFilterLogModel.aggregate([\n    { $match: { viewDate: { $gte: new Date(startDate), $lte: new Date(endDate) } } },\n    { $project: { _id: 0, viewDate: 1, language: 1 } },\n    { $unwind: '$language' },\n    { $group: { _id: '$language', count: { $sum: 1 } } },\n    { $sort: { count: -1 } },\n  ]);\n  return userHistory;\n};\n\nexport { findDailyUser, findUserHistory, findDailyPost, findPostHistory, findPostFilterRank };\n"]}