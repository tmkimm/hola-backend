{"version":3,"file":"comment.js","sourceRoot":"/","sources":["services/comment.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;IACE,wBAAsB,SAAqB,EAAY,iBAAqC;QAAtE,cAAS,GAAT,SAAS,CAAY;QAAY,sBAAiB,GAAjB,iBAAiB,CAAoB;QAC1F,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;IAC7C,CAAC;IAED,0BAA0B;IACpB,qCAAY,GAAlB,UAAmB,EAAkB;;;;;4BAClB,qBAAM,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,CAAC,EAAA;;wBAAhD,QAAQ,GAAG,SAAqC;wBACtD,sBAAO,QAAQ,EAAC;;;;KACjB;IAED,eAAe;IACT,wCAAe,GAArB,UAAsB,MAAsB,EAAE,MAAsB,EAAE,OAAe,EAAE,QAAgB;;;;;4BACzE,qBAAM,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,EAAA;;wBAAnF,KAAsB,SAA6D,EAAjF,IAAI,UAAA,EAAE,SAAS,eAAA;wBACvB,2HAA2H;wBAC3H,sBAAO,IAAI,EAAC;;;;KACb;IAED,YAAY;IACN,sCAAa,GAAnB,UAAoB,OAAyB,EAAE,WAA2B,EAAE,SAAiB;;;;;4BAC3F,qBAAM,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,OAAO,CAAC,GAAG,EAAE,WAAW,EAAE,SAAS,CAAC,EAAA;;wBAAnF,SAAmF,CAAC;wBAC9D,qBAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,EAAA;;wBAA3D,aAAa,GAAG,SAA2C;wBACjE,sBAAO,aAAa,EAAC;;;;KACtB;IAED,YAAY;IACN,sCAAa,GAAnB,UAAoB,SAAyB,EAAE,MAAsB,EAAE,SAAiB;;;;;4BACtF,qBAAM,IAAI,CAAC,SAAS,CAAC,yBAAyB,CAAC,SAAS,EAAE,MAAM,EAAE,SAAS,CAAC,EAAA;;wBAA5E,SAA4E,CAAC;wBAE1D,qBAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,EAAA;;wBAA1D,UAAU,GAAG,SAA6C;;;;;KAEjE;IACH,qBAAC;AAAD,CAAC,AAjCD,IAiCC;AAjCY,wCAAc","sourcesContent":["import { Types } from 'mongoose';\r\nimport { ICommentDocument, IComment, IPostModel } from '../models/Post';\r\nimport { INotificationModel } from '../models/Notification';\r\n\r\nexport class CommentService {\r\n  constructor(protected postModel: IPostModel, protected notificationModel: INotificationModel) {\r\n    this.postModel = postModel;\r\n    this.notificationModel = notificationModel;\r\n  }\r\n\r\n  // 글 id를 이용해 댓글 리스트를 조회한다.\r\n  async findComments(id: Types.ObjectId) {\r\n    const comments = await this.postModel.findComments(id);\r\n    return comments;\r\n  }\r\n\r\n  // 신규 댓글을 추가한다.\r\n  async registerComment(userID: Types.ObjectId, postId: Types.ObjectId, content: string, nickName: string) {\r\n    const { post, commentId } = await this.postModel.registerComment(postId, content, userID);\r\n    // await this.notificationModel.registerNotification(postId, post.author, userID, 'comment', commentId, nickName); // 알림 등록\r\n    return post;\r\n  }\r\n\r\n  // 댓글을 수정한다.\r\n  async modifyComment(comment: ICommentDocument, tokenUserId: Types.ObjectId, tokenType: string) {\r\n    await this.postModel.checkCommentAuthorization(comment._id, tokenUserId, tokenType);\r\n    const commentRecord = await this.postModel.modifyComment(comment);\r\n    return commentRecord;\r\n  }\r\n\r\n  // 댓글을 삭제한다.\r\n  async deleteComment(commentId: Types.ObjectId, userId: Types.ObjectId, tokenType: string) {\r\n    await this.postModel.checkCommentAuthorization(commentId, userId, tokenType);\r\n\r\n    const postRecord = await this.postModel.deleteComment(commentId);\r\n    // await this.notificationModel.deleteNotification(commentId); // 알림 삭제\r\n  }\r\n}\r\n"]}