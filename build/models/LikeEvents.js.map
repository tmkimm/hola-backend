{"version":3,"file":"LikeEvents.js","sourceRoot":"/","sources":["models/LikeEvents.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAuD;AAevD,IAAM,gBAAgB,GAAG,IAAI,iBAAM,CACjC;IACE,MAAM,EAAE,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE;IAC9C,OAAO,EAAE,EAAE,IAAI,EAAE,gBAAK,CAAC,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE;CAChD,EACD;IACE,UAAU,EAAE,IAAI;CACjB,CACF,CAAC;AAEF,gBAAgB,CAAC,OAAO,CAAC,GAAG,GAAG,UAAgB,OAAO,EAAE,MAAM;;;;wBAC5D,qBAAM,IAAI,CAAC,MAAM,CAAC;wBAChB,MAAM,QAAA;wBACN,OAAO,SAAA;qBACR,CAAC,EAAA;;oBAHF,SAGE,CAAC;;;;;CACJ,CAAC;AAEF,gBAAgB,CAAC,OAAO,CAAC,MAAM,GAAG,UAAgB,OAAO,EAAE,MAAM;;;;wBAC/D,qBAAM,IAAI,CAAC,SAAS,CAAC,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,CAAC,EAAA;;oBAAzC,SAAyC,CAAC;;;;;CAC3C,CAAC;AAEF,IAAM,UAAU,GAAG,IAAA,gBAAK,EAAwC,YAAY,EAAE,gBAAgB,CAAC,CAAC;AACvF,gCAAU","sourcesContent":["import { Model, Schema, Types, model } from 'mongoose';\n\nexport interface ILikeEvents {\n  viewDate: Date;\n  userId: Types.ObjectId;\n  eventId: Types.ObjectId;\n}\n\nexport interface ILikeEventsDocument extends ILikeEvents, Document {}\n\nexport interface ILikeEventsModel extends Model<ILikeEventsDocument> {\n  add: (eventId: Types.ObjectId, userId: Types.ObjectId) => void;\n  delete: (eventId: Types.ObjectId, userId: Types.ObjectId) => void;\n}\n\nconst LikeEventsSchema = new Schema<ILikeEventsDocument>(\n  {\n    userId: { type: Types.ObjectId, ref: 'Event' },\n    eventId: { type: Types.ObjectId, ref: 'Event' },\n  },\n  {\n    timestamps: true,\n  }\n);\n\nLikeEventsSchema.statics.add = async function (eventId, userId) {\n  await this.create({\n    userId,\n    eventId,\n  });\n};\n\nLikeEventsSchema.statics.delete = async function (eventId, userId) {\n  await this.deleteOne({ userId, eventId });\n};\n\nconst LikeEvents = model<ILikeEventsDocument, ILikeEventsModel>('LikeEvents', LikeEventsSchema);\nexport { LikeEvents };\n"]}