{"version":3,"file":"errorHandler.js","sourceRoot":"/","sources":["loaders/errorHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import createError from 'http-errors';\nimport mongoose from 'mongoose';\nimport jsonwebtoken from 'jsonwebtoken';\nimport express from 'express';\nimport * as Sentry from '@sentry/node';\nimport { IncomingWebhook } from '@slack/client';\nimport config from '../config/index';\nimport CustomError from '../CustomError';\n\nexport default (app: express.Application) => {\n  app.use(\n    Sentry.Handlers.errorHandler({\n      shouldHandleError(error: Error) {\n        // is Custom Error\n        if (error.message !== `jwt malformed` && error.message !== `jwt expired` && !(`type` in error)) {\n          const webhook = new IncomingWebhook(config.SlackWebhook);\n          webhook\n            .send({\n              attachments: [\n                {\n                  color: 'danger',\n                  text: '백엔드 에러 발생',\n                  fields: [\n                    {\n                      title: error.message,\n                      value: error.stack! as string,\n                      short: false,\n                    },\n                  ],\n                  ts: Math.floor(new Date().getTime() / 1000).toString(),\n                },\n              ],\n            })\n            .catch((err: Error) => {\n              if (err) Sentry.captureException(err);\n            });\n\n          return true;\n        }\n        return false;\n      },\n    }) as express.ErrorRequestHandler,\n  );\n  // catch 404 and forward to error handler\n  app.use((req: express.Request, res: express.Response, next: express.NextFunction) => {\n    next(createError(404));\n  });\n\n  app.use(function handleMongoError(\n    error: Error,\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction,\n  ) {\n    if (error instanceof mongoose.Error) return res.status(400).json({ type: 'MongoError', message: error.message });\n    next(error);\n  });\n\n  app.use(function handlejwtError(\n    error: Error,\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction,\n  ) {\n    if (error instanceof jsonwebtoken.TokenExpiredError)\n      return res.status(401).json({ type: 'TokenExpiredError', message: error.message });\n    if (error instanceof jsonwebtoken.JsonWebTokenError)\n      return res.status(401).json({ type: 'JsonWebTokenError', message: error.message });\n    next(error);\n  });\n\n  // custom error handler\n  app.use(function handlecustomError(\n    error: Error,\n    req: express.Request,\n    res: express.Response,\n    next: express.NextFunction,\n  ) {\n    if (error instanceof CustomError) {\n      const { status, type, message } = error;\n      return res.status(status).send({ type, message });\n    }\n    next(error);\n  });\n\n  // error handler\n  app.use(function (error: Error, req: express.Request, res: express.Response, next: express.NextFunction) {\n    return res.status(400).json({ message: error.message });\n  });\n};\n"]}