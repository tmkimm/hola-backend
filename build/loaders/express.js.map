{"version":3,"file":"express.js","sourceRoot":"/","sources":["loaders/express.ts"],"names":[],"mappings":";;;;;AAAA,oDAA8B;AAC9B,8CAAwB;AACxB,gEAAyC;AACzC,8CAAwB;AACxB,0DAAqC;AACrC,uDAAkC;AAElC,mBAAe,UAAC,GAAwB;IAGtC,IAAM,SAAS,GAAiB;QAC9B,uBAAuB;QACvB,qBAAqB;QACrB,sBAAsB;QACtB,yBAAyB;QACzB,0BAA0B;KAC3B,CAAC;IACF,iFAAiF;IACjF,IAAM,WAAW,GAAG;QAClB,MAAM,EAAN,UAAO,MAA0B,EAAE,QAAkE;YACnG,IAAM,aAAa,GAAG,MAAM,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAChC,CAAC;QACD,WAAW,EAAE,IAAI;KAClB,CAAC;IAEF,oBAAoB;IACpB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,WAAW,CAAC,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,cAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAE7D,eAAe;IACf,GAAG,CAAC,GAAG,CAAC,eAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAA,eAAM,GAAE,CAAC,CAAC;AACvC,CAAC,EAAC","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport cookieParser from 'cookie-parser';\nimport cors from 'cors';\nimport config from '../config/index';\nimport routes from '../api/index';\n\nexport default (app: express.Application) => {\n  type StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[];\n\n  const whitelist: StaticOrigin = [\n    'http://localhost:3000',\n    'http://holaworld.io',\n    'https://holaworld.io',\n    'http://www.holaworld.io',\n    'https://www.holaworld.io',\n  ];\n  // type StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[];\n  const corsOptions = {\n    origin(origin: string | undefined, callback: (err: Error | null, singleOrigin?: StaticOrigin) => void) {\n      const isWhitelisted = origin && whitelist.indexOf(origin) !== -1;\n      callback(null, isWhitelisted);\n    },\n    credentials: true,\n  };\n\n  // Cors Whitelist 관리\n  app.use(cors(corsOptions));\n  app.use(express.json());\n  app.use(express.urlencoded({ extended: true }));\n  app.use(cookieParser());\n  app.use(express.static(path.join(path.resolve(), 'public')));\n\n  // API Route 설정\n  app.use(config.api.prefix, routes());\n};\n"]}