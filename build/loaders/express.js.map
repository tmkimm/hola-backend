{"version":3,"file":"express.js","sourceRoot":"/","sources":["loaders/express.ts"],"names":[],"mappings":";;;;;AAAA,oDAA8B;AAC9B,8CAAwB;AACxB,gEAAyC;AACzC,8CAAwB;AACxB,0EAA2C;AAC3C,gEAAyC;AACzC,0EAAkD;AAClD,0DAAqC;AACrC,uDAAkC;AAClC,4DAAyC;AACzC,+DAA+C;AAE/C,mBAAe,UAAC,GAAwB;;IAGtC,IAAM,SAAS,GAAiB;QAC9B,uBAAuB;QACvB,qBAAqB;QACrB,sBAAsB;QACtB,yBAAyB;QACzB,0BAA0B;QAC1B,UAAU;KACX,CAAC;IACF,iFAAiF;IACjF,IAAM,WAAW,GAAG;QAClB,MAAM,EAAN,UAAO,MAA0B,EAAE,QAAkE;YACnG,IAAM,aAAa,GAAG,MAAM,IAAI,SAAS,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACjE,QAAQ,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QAChC,CAAC;QACD,WAAW,EAAE,IAAI;KAClB,CAAC;IAEF,oBAAoB;IACpB,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,EAAC,WAAW,CAAC,CAAC,CAAC;IAC3B,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAChD,GAAG,CAAC,GAAG,CAAC,IAAA,uBAAY,GAAE,CAAC,CAAC;IACxB,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,MAAM,CAAC,cAAI,CAAC,IAAI,CAAC,cAAI,CAAC,OAAO,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAE7D,eAAe;IACf,GAAG,CAAC,GAAG,CAAC,eAAM,CAAC,GAAG,CAAC,MAAM,EAAE,IAAA,eAAM,GAAE,CAAC,CAAC;IAErC,GAAG,CAAC,GAAG,CACL,CAAC,WAAW,CAAC,EACb,IAAA,4BAAgB,EAAC;QACf,SAAS,EAAE,IAAI;QACf,KAAK;YACH,GAAC,eAAM,CAAC,OAAO,IAAG,eAAM,CAAC,aAAa;eACvC;KACF,CAAC,CACH,CAAC;IACF,UAAU;IACV,IAAM,KAAK,GAAG,IAAA,uBAAY,EAAC,iBAAa,CAAC,CAAC;IAC1C,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,4BAAS,CAAC,KAAK,EAAE,4BAAS,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;IAE9D,UAAU;IACV,IAAA,eAAQ,GAAE,CAAC;AACb,CAAC,EAAC","sourcesContent":["import express from 'express';\r\nimport path from 'path';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport swaggerUi from 'swagger-ui-express';\r\nimport swaggerJSDoc from 'swagger-jsdoc';\r\nimport expressBasicAuth from 'express-basic-auth';\r\nimport config from '../config/index';\r\nimport routes from '../api/index';\r\nimport schedule from '../schedule/index';\r\nimport swaggerOption from '../swagger/swagger';\r\n\r\nexport default (app: express.Application) => {\r\n  type StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[];\r\n\r\n  const whitelist: StaticOrigin = [\r\n    'http://localhost:3000',\r\n    'http://holaworld.io',\r\n    'https://holaworld.io',\r\n    'http://www.holaworld.io',\r\n    'https://www.holaworld.io',\r\n    'ngork.io',\r\n  ];\r\n  // type StaticOrigin = boolean | string | RegExp | (boolean | string | RegExp)[];\r\n  const corsOptions = {\r\n    origin(origin: string | undefined, callback: (err: Error | null, singleOrigin?: StaticOrigin) => void) {\r\n      const isWhitelisted = origin && whitelist.indexOf(origin) !== -1;\r\n      callback(null, isWhitelisted);\r\n    },\r\n    credentials: true,\r\n  };\r\n\r\n  // Cors Whitelist 관리\r\n  app.use(cors(corsOptions));\r\n  app.use(express.json());\r\n  app.use(express.urlencoded({ extended: true }));\r\n  app.use(cookieParser());\r\n  app.use(express.static(path.join(path.resolve(), 'public')));\r\n\r\n  // API Route 설정\r\n  app.use(config.api.prefix, routes());\r\n\r\n  app.use(\r\n    ['/api-docs'],\r\n    expressBasicAuth({\r\n      challenge: true,\r\n      users: {\r\n        [config.AdminId]: config.AdminPassword,\r\n      },\r\n    }),\r\n  );\r\n  // Swagger\r\n  const specs = swaggerJSDoc(swaggerOption);\r\n  app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(specs));\r\n\r\n  // 스케줄러 실행\r\n  schedule();\r\n};\r\n"]}