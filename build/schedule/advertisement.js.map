{"version":3,"file":"advertisement.js","sourceRoot":"/","sources":["schedule/advertisement.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAAqC;AACrC,2CAAsE;AACtE,yDAA8E;AAE9E;;EAEE;AAEF,QAAQ;AACR,SAAe,aAAa;;;;;;yBAEtB,CAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAA,EAArC,wBAAqC;oBACjC,IAAI,GAAG,IAAI,uBAAQ,CAAC,cAAc,EAAE,CAAC;oBAC3C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;oBACd,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC;oBAEX,qBAAM,uBAAQ,CAAC,WAAW,CAAC,IAAI,EAAE;;;;oCACrC,4BAA4B,GAAG,IAAI,4BAAoB,CAAC,6BAAkB,CAAC,CAAC;oCAClF,4BAA4B,CAAC,wBAAwB,EAAE,CAAC;;;;yBACzD,CAAC,EAAA;;oBAHI,GAAG,GAAG,SAGV;;;;;;CAEL;AAEQ,sCAAa","sourcesContent":["import schedule from 'node-schedule';\nimport { AdvertisementService, PostService } from '../services/index';\nimport { Advertisement as AdvertisementModel } from '../models/Advertisement';\n\n/*\n  공모전에 관련된 Schedule을 정의한다.\n*/\n\n// 자동 마감\nasync function adAutoClosing() {\n  // 프로덕션 환경에서만 실행\n  if (process.env.NODE_ENV === 'production') {\n    const rule = new schedule.RecurrenceRule();\n    rule.hour = 0;\n    rule.tz = 'Asia/Seoul';\n\n    const job = await schedule.scheduleJob(rule, async function () {\n      const AdvertisementServiceInstance = new AdvertisementService(AdvertisementModel);\n      AdvertisementServiceInstance.updateClosedAfterEndDate();\n    });\n  }\n}\n\nexport { adAutoClosing };\n"]}