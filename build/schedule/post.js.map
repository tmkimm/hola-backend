{"version":3,"file":"post.js","sourceRoot":"/","sources":["schedule/post.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAAqC;AAErC,yCAA+C;AAG/C;;EAEE;AAEF,QAAQ;AACR,SAAe,uBAAuB;;;;;;yBAEhC,CAAA,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAA,EAArC,wBAAqC;oBACjC,IAAI,GAAG,IAAI,uBAAQ,CAAC,cAAc,EAAE,CAAC;oBAC3C,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;oBACd,IAAI,CAAC,EAAE,GAAG,YAAY,CAAC;oBAEX,qBAAM,uBAAQ,CAAC,WAAW,CAAC,IAAI,EAAE;;;;gDAC3C,qBAAM,IAAA,kBAAW,GAAE,EAAA;;4CAAnB,SAAmB,CAAC;;;;;yBACrB,CAAC,EAAA;;oBAFI,GAAG,GAAG,SAEV;;;;;;CAEL;AAEQ,0DAAuB","sourcesContent":["import schedule from 'node-schedule';\nimport { IUser, User as UserModel } from '../models/User';\nimport { autoClosing } from '../services/post';\nimport { Post as PostModel } from '../models/Post';\nimport { Notification as NotificationModel } from '../models/Notification';\n/*\n  글에 관련된 Schedule을 정의한다.\n*/\n\n// 자동 마감\nasync function automaticClosingOfPosts() {\n  // 프로덕션 환경에서만 실행\n  if (process.env.NODE_ENV === 'production') {\n    const rule = new schedule.RecurrenceRule();\n    rule.hour = 0;\n    rule.tz = 'Asia/Seoul';\n\n    const job = await schedule.scheduleJob(rule, async function () {\n      await autoClosing();\n    });\n  }\n}\n\nexport { automaticClosingOfPosts };\n"]}