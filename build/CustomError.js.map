{"version":3,"file":"CustomError.js","sourceRoot":"/","sources":["CustomError.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA;IAAyC,+BAAK;IAC5C,qBAAmB,IAAwB,EAAS,MAAoB;QAArD,qBAAA,EAAA,gBAAwB;QAAS,uBAAA,EAAA,YAAoB;QAAE,gBAAgB;aAAhB,UAAgB,EAAhB,qBAAgB,EAAhB,IAAgB;YAAhB,+BAAgB;;QAA1F,+BACW,MAAM,UAQhB;QATkB,UAAI,GAAJ,IAAI,CAAoB;QAAS,YAAM,GAAN,MAAM,CAAc;QAGtE,IAAI,KAAK,CAAC,iBAAiB,EAAE;YAC3B,KAAK,CAAC,iBAAiB,CAAC,KAAI,EAAE,WAAW,CAAC,CAAC;SAC5C;QAED,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACvB,CAAC;IACH,kBAAC;AAAD,CAAC,AAXD,CAAyC,KAAK,GAW7C","sourcesContent":["export default class CustomError extends Error {\n  constructor(public type: string = 'GENERIC', public status: number = 400, ...params: any[]) {\n    super(...params);\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CustomError);\n    }\n\n    this.type = type;\n    this.status = status;\n  }\n}\n"]}